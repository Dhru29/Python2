# -*- coding: utf-8 -*-
"""Assignment 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12nsBBGspqAU4vC99fSzonyKL-PQ-vcDJ
"""

class Vehicle:
    def __init__(self, name_of_vehicle, max_speed, average_of_vehicle):
        self.name_of_vehicle = name_of_vehicle
        self.max_speed = max_speed
        self.average_of_vehicle = average_of_vehicle

    def __str__(self):
        return f"Vehicle: {self.name_of_vehicle}, Max Speed: {self.max_speed} km/h, Average Speed: {self.average_of_vehicle} km/h"

car = Vehicle("Dodge Charger", 280, 80)
print(car)

class Vehicle:
    def __init__(self, name, max_speed):
        self.name = name
        self.max_speed = max_speed

    def info(self):
        return f"Vehicle Name: {self.name}, Max Speed: {self.max_speed} km/h"


class Car(Vehicle):
    def seating_capacity(self, capacity):
        return f"The {self.name} has a seating capacity of {capacity} passengers."

class Parent1:
    def method1(self):
        return "Method from Parent 1"


class Parent2:
    def method2(self):
        return "Method from Parent 2"


class Child(Parent1, Parent2):
    pass

# Create an instance of Child
child = Child()

# Access methods from Parent1 and Parent2
result1 = child.method1()
result2 = child.method2()

print(result1)  # Output: "Method from Parent 1"
print(result2)  # Output: "Method from Parent 2"

class Person:
    def __init__(self, name, age, gender):
        self.__name = name
        self.__age = age
        self.__gender = gender

    def say_hello(self):
        print(f"Hello, my name is {self.__name}.")

    def is_adult(self):
        return self.__age >= 18

    def get_age(self):
        return self.__age

    def get_name(self):
        return self.__name


class Student(Person):
    def __init__(self, name, age, gender, student_id, course):
        super().__init__(name, age, gender)
        self.__student_id = student_id
        self.__course = course

    def get_student_info(self):
        return f"Student ID: {self.__student_id}, Course: {self.__course}"


class Teacher(Person):
    def __init__(self, name, age, gender, teacher_id, subject):
        super().__init__(name, age, gender)
        self.__teacher_id = teacher_id
        self.__subject = subject

    def say_hello(self):
        print(f"Good day! I am {self.get_name()}, your {self.__subject} teacher.")

    def get_teacher_info(self):
        return f"Teacher ID: {self.__teacher_id}, Subject: {self.__subject}"



person = Person("Dhru Patel", 25, "Male")
person.say_hello()
print(f"Is adult: {person.is_adult()}")
print(f"Age: {person.get_age()}")


student = Student("Dhru Patel", 22, "Male", "894121", "Python")
student.say_hello()
print(student.get_student_info())
print(f"Is adult: {student.is_adult()}")
print(f"Age: {student.get_age()}")


teacher = Teacher("Prof. Patel", 35, "Male", "007", "IT")
teacher.say_hello()
print(teacher.get_teacher_info())
print(f"Is adult: {teacher.is_adult()}")
print(f"Age: {teacher.get_age()}")